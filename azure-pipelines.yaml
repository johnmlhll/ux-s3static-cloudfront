trigger: none

pool:
  vmImage: ubuntu-latest

parameters:
  - name: RegionCode
    type: string 
    default: 'eu-west-1'
  - name: CFTStackName
    type: string
    default: 'MaolteUXCFDemoStack'
  - name: AWSServiceConn
    type: string
    default: 'cloudfrontUXDemoSandbox'

stages:
  - stage: ProvisionAWSInfrastructure
    displayName: "Deploy CFT Stack for S3/CloudFront to Maolte's sandbox account for the UX demo frontend"
    jobs:
    - job: ExecuteInfraTemplate
      steps:
      - task: CloudFormationCreateOrUpdateStack@1
        inputs:
          awsCredentials: ${{ parameters.AWSServiceConn }}
          regionName: ${{ parameters.RegionCode }}
          stackName: ${{ parameters.CFTStackName }}
          templateFile: 'iac/provision-ux-infra.yaml'
          templateParametersFile: 'iac/params.json'
          captureStackOutputs: asVariables
      - bash: |
          echo "##vso[task.setvariable variable=cftS3BucketOutput;isOutput=true]$S3BUCKET_NAME"
          echo "##vso[task.setvariable variable=cftCfDistributionIdOutput;isOutput=true]$CF_DISTRO_ID"
          echo "##vso[task.setvariable variable=cftCfDomainNameOutput;isOutput=true]$CF_DOMAINNAME"
          echo "CloudFormation Stack Outputs captured as variable dependencies for the next stage..."
        env:
          S3BUCKET_NAME: $(S3BucketName)
          CF_DISTRO_ID: $(CfDistributionId)
          CF_DOMAINNAME: $(CfDistributionDomainName)
        name: declareCFTOutputs

  - stage: UploadFilesToS3
    dependsOn: ProvisionAWSInfrastructure
    displayName: "Deploy Static (S3) Site files to S3 for consumption by the new CloudFront distribution"
    jobs:
    - job: UploadStaticSiteFiles
      variables:
        s3BucketLocalVar: $[stageDependencies.ProvisionAWSInfrastructure.ExecuteInfraTemplate.outputs['declareCFTOutputs.cftS3BucketOutput']]
        cfDistroIdLocalVar: $[stageDependencies.ProvisionAWSInfrastructure.ExecuteInfraTemplate.outputs['declareCFTOutputs.cftCfDistributionIdOutput']]
        cfDomainNameLocalVar: $[stageDependencies.ProvisionAWSInfrastructure.ExecuteInfraTemplate.ouputs['declareCFTOutputs.cftCfDomainNameOutput']]
      steps:
      - bash: |
          echo "Local Variables for upload/update on the static site: "
          echo $(s3BucketLocalVar)
          echo $(cfDistroIdLocalVar)
          echo $(cfDomainNameLocalVar)
        name: S3StageVariableChecks
      - task: S3Upload@1
        displayName: "Upload static site files to newly created S3"
        inputs:
          awsCredentials: ${{ parameters.AWSServiceConn }}
          regionName: ${{ parameters.RegionCode }}
          bucketName: $(s3BucketLocalVar)
          sourceFolder: '$(System.DefaultWorkingDirectory)/code'
          globExpressions: '**'
          filesAcl: 'bucket-owner-full-control'